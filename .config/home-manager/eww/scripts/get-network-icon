#!/usr/bin/env bash

PATH_NETWORK_ERROR=$(get-icon network-error)
PATH_IDLE=$(get-icon network-idle)
PATH_DISCONNECTED=$(get-icon network-offline)
PATH_RECEIVE=$(get-icon network-receive)
PATH_TRANSMIT=$(get-icon network-transmit)
PATH_TRANSMIT_RECEIVE=$(get-icon network-transmit-receive)

CURRENT_PATH=$PATH_NETWORK_ERROR

interval=$1

device=$(ip addr | awk '/state UP/ {print $2}' | sed 's/://g')

if [ "$device" == "" ]
then
  CURRENT_PATH=$PATH_DISCONNECTED
  tx_old=0
  rx_old=0
else
  CURRENT_PATH=$PATH_IDLE
  tx_old="$(</sys/class/net/$device/statistics/tx_bytes)"
  rx_old="$(</sys/class/net/$device/statistics/rx_bytes)"
fi

echo $CURRENT_PATH

while true
do 
  device=$(ip addr | awk '/state UP/ {print $2}' | sed 's/://g')

  if [ "$device" == "" ]
  then
    new_path=$PATH_DISCONNECTED
  else
    tx_now=$(</sys/class/net/$device/statistics/tx_bytes)
    rx_now=$(</sys/class/net/$device/statistics/rx_bytes)
    up=$(($tx_now-$tx_old))
    down=$(($rx_now-$rx_old))
    tx_old=$tx_now
    rx_old=$rx_now

    new_path=$PATH_ERROR
    if [ $up -eq 0 ]
    then
      if [ $down -eq 0 ]
      then
        new_path=$PATH_IDLE
      else
        new_path=$PATH_RECEIVE
      fi
    else
      if [ $down -eq 0 ]
      then
        new_path=$PATH_TRANSMIT
      else
        new_path=$PATH_TRANSMIT_RECEIVE
      fi
    fi

    if [ "$new_path" != "$CURRENT_PATH" ]
    then
      CURRENT_PATH=$new_path
      echo $CURRENT_PATH
    fi
  fi
  sleep $interval
done

