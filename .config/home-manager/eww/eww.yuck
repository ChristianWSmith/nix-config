; WORKSPACES
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  ;(eventbox 
    (box 
      :space-evenly true   
      :orientation "vertical"
      (label 
        :text "${workspaces}${current_workspace}" 
        :visible false)
      (for workspace in workspaces
        (button
          :class "bar-button"
          :visible "${workspace.windows > 0 || workspace.id == current_workspace ?"true" : "false"}"        
          :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box
            :height 36
            :width 36
            :class "workspace-entry ${workspace.id == current_workspace ? "workspace-current" : ""}"
            (label 
              :text "${workspace.id}"
              )
            )
          )
        )
      )
    ;)
  )


; BAR

(defwidget launcher []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :onclick "app-launcher"
      :class "bar-button"
      ;(box
      ;  :height 36
      ;  :width 36
      ;  )
      (image
        :path "assets/nixos-icon.svg"
        :image-height 36
        :image-width 36
        )
      )
    )
  )

(defwidget top []
  (box
    :orientation "v"
    :space-evently "false"
    :valign "start"
    (launcher)
    )
  )

(defwidget middle []
  (box
    :orientation "v"
    :space-evenly "false"
    :valign "center"
    (workspaces)
    )
  )

(defwidget bottom []
  (box
    :orientation "v"
    :space-evenly "false"
    :valign "end"
    (launcher)
    )
  )

(defwidget bar [] 
  (box 
    :class "eww-bar"
    :orientation "v"
    :vexpand "false"
    :hexpand "false"
    (top)
    (middle)
    (bottom)
    )
  )

(defwindow bar  
  :monitor 0
  :exclusive true
  :stacking "fg"
  :focusable false
  :namespace "eww-bar"
  :geometry 
    (geometry 
      :x "5px"
      :y "0px"
      :width "40px"
      :height "100%"
      :anchor "center left")
  (bar)
  )

; WALLPAPER

(defwidget wallpaper [] 
  (box 
    :class "wallpaper"
    :orientation "horizontal"
    )
  )

(defwindow wallpaper
  :exclusive false
  :stacking "bg"
  :focusable false
  :namespace "eww-wallpaper"
  :geometry
    (geometry :x "0%"
      :y "0%"
      :width "100%"
      :height "100%"
      :anchor "center right")
  (wallpaper)
  )
