; WORKSPACES
(deflisten workspaces :initial "[]" "scripts/get-workspaces")
(deflisten current_workspace :initial "1" "scripts/get-active-workspace")
(defwidget workspaces []
  (box 
    :space-evenly true   
    :orientation "vertical"
    (label 
      :text "${workspaces}${current_workspace}" 
      :visible false
      )
    (for workspace in workspaces
      (button
        :tooltip "Workspace ${workspace.id}"
        :class "bar-button"
        :visible "${workspace.windows > 0 || workspace.id == current_workspace ?"true" : "false"}"        
        :onclick "hyprctl dispatch workspace ${workspace.id}"
        (label 
          :class "${workspace.id == current_workspace ? "workspace-current" : ""}"
          :height 23
          :width 36
          :valign "center"
          :halign "center"
          :text "${workspace.id}"
          )
        )
      )
    )
  )


; BAR

(deflisten app-launcher-icon-path :initial "assets/blank.svg"
  `get-icon applications-all`)

(defwidget launcher []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip "Applications"
      :onclick "app-launcher & disown"
      :class "bar-button"
      (image
        :path app-launcher-icon-path
        :image-height 36
        )
      )
    )
  )

(deflisten screenshot-icon-path :initial "assets/blank.svg"
  `get-icon accessories-screenshot`)

(defwidget screenshot []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip "Screenshot"
      :onclick "hyprland-screenshot & disown"
      :class "bar-button"
      (image
        :path screenshot-icon-path
        :image-height 36
        )
      )
    )
  )

(deflisten colorpicker-icon-path :initial "assets/blank.svg"
  `get-icon color-picker`)

(defwidget colorpicker []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip "Color Picker"
      :onclick "hyprland-colorpicker & disown"
      :class "bar-button"
      (image
        :path colorpicker-icon-path
        :image-height 36
        )
      )
    )
  )

(deflisten screen-recorder-icon-path :initial "assets/blank.svg"
  `scripts/python-launcher get-screen-recorder-icon.py /ram/get-screen-recorder-icon 1`)

(defwidget screen-recorder []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip "Record Screen"
      :onclick "hyprctl dispatch exec record-screen"
      :class "bar-button"
      (image
        :path screen-recorder-icon-path
        :image-height 36
        )
      )
    )
  )

(deflisten emoji-picker-icon-path :initial "assets/blank.svg"
  `get-icon face-smile`)

(defwidget emoji-picker []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip "Emoji Picker"
      :onclick "emoji copy & disown"
      :class "bar-button"
      (image
        :path emoji-picker-icon-path
        :image-height 36
        )
      )
    )
  )


(deflisten clipboard-icon-path :initial "assets/blank.svg"
  `get-icon xclipboard`)

(defwidget clipboard-picker []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip "Clipboard History"
      :onclick "clipboard-picker & disown"
      :class "bar-button"
      (image
        :path clipboard-icon-path
        :image-height 36
        )
      )
    )
  )

(deflisten power-profile :initial ""
  `scripts/python-launcher get-power-profile.py /ram/get-power-profile 1`)
(deflisten power-profile-icon :initial "assets/blank.svg"
  `scripts/get-power-profile-icon 1`)

(defwidget power-profile []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip "Power Profile: ${power-profile}"
      :onclick "scripts/set-power-profile power-saver"
      :onmiddleclick "scripts/set-power-profile balanced"
      :onrightclick "scripts/set-power-profile performance"
      :class "bar-button"
      (box
        :height 36
        (image
          :path power-profile-icon
          :image-height 30
          )
        )
      )
    )
  )

(deflisten cpu-usage :initial "-1%"
  `scripts/python-launcher get-cpu-usage.py /ram/cpu-usage 1`)

(defwidget cpu-usage []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip "CPU Usage"
      :onclick "terminal btop"
      :class "bar-button"
      (label
        :class "clock-text"
        :height 36
        :width 36
        :valign "center"
        :halign "center"
        :text cpu-usage
        )
      )
    )
  )

(deflisten network-icon-path :initial "assets/blank.svg"
  `scripts/python-launcher get-network-icon.py /ram/get-network-icon 1`)

(defwidget network []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip "Network"
      :onclick "nm-connection-editor & disown"
      :onrightclick "terminal nmtui & disown"
      :class "bar-button"
      (image
        :path network-icon-path
        :image-height 36
        )
      )
    )
  )


(deflisten volume-icon-path :initial "assets/blank.svg"
  `scripts/get-volume-icon`)

(defwidget volume []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip "Audio Settings"
      :onclick "pavucontrol & disown"
      :onrightclick "terminal pulsemixer & disown"
      :class "bar-button"
      (image
        :path volume-icon-path
        :image-height 36
        )
      )
    )
  )

(deflisten time :initial ""
  `scripts/python-launcher get-time.py /ram/time 1`)
(deflisten date :initial ""
  `scripts/python-launcher get-date.py /ram/date 1`)

(defwidget clock []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip date
      ; :onclick "" ; TODO: do something when clicking clock
      :class "bar-button"
      (label
        :class "clock-text"
        :height 36
        :width 36
        :valign "center"
        :halign "center"
        :text time
        )
      )
    )
  )

(deflisten power-menu-icon-path :initial "assets/blank.svg"
  `get-icon system-shutdown`)

(defwidget poweroff []
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :tooltip "Power Menu"
      :onclick "power-menu"
      :class "bar-button"
      (image
        :path power-menu-icon-path
        :image-height 36
        )
      )
    )
  )

(defwidget top []
  (box
    :orientation "v"
    :space-evenly "false"
    :valign "start"
    (launcher)
    (screenshot)
    (colorpicker)
    (screen-recorder)
    (emoji-picker)
    (clipboard-picker)
    )
  )

(defwidget middle []
  (box
    :orientation "v"
    :space-evenly "false"
    :valign "center"
    (workspaces)
    )
  )

(defwidget bottom []
  (box
    :orientation "v"
    :space-evenly "false"
    :valign "end"
    (power-profile)
    (cpu-usage)
    (network)
    (volume)
    (clock)
    (poweroff)
    )
  )

(defwidget bar [] 
  (box 
    :class "eww-bar"
    :orientation "v"
    :vexpand "false"
    :hexpand "false"
    (top)
    (middle)
    (bottom)
    )
  )

(defwindow bar  
  :monitor 0
  :exclusive true
  :stacking "fg"
  :focusable false
  :namespace "eww-bar"
  :geometry 
    (geometry 
      :x "5px"
      :y "0px"
      :width "40px"
      :height "100%"
      :anchor "center left")
  (bar)
  )

; WALLPAPER

(defwidget wallpaper [] 
  (box 
    :class "wallpaper"
    :orientation "horizontal"
    )
  )

(defwindow wallpaper
  :exclusive false
  :stacking "bg"
  :focusable false
  :namespace "eww-wallpaper"
  :geometry
    (geometry :x "0%"
      :y "0%"
      :width "100%"
      :height "100%"
      :anchor "center right")
  (wallpaper)
  )
